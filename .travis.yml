language: java
before_install:
  - sudo apt-get update -qq
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch; fi
  # download the latest android sdk and unzip
  - wget http://dl.google.com/android/android-sdk_r22.3-linux.tgz
  - tar -zxf android-sdk_r22.3-linux.tgz
  - export ANDROID_HOME=`pwd`/android-sdk-linux
  - ls -la  android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools
  # only update the sdk for the tools and platform-tools (1,2) and whatever api level
  # you are building for android (run "android list sdk --extended --no-ui" to get the full list).
  - echo y | android update sdk --filter 1,2 --no-ui --force
  # now get a runtime environment, the latest revision of Android (4.2.2) should do.
  - echo y | android update sdk --filter android-17,sysimg-17,tools,platform-tools,extra-android-support --no-ui --force
  # Create and start emulator
  - echo no | android create avd --force -n test -t android-17  --abi armeabi-v7a
  - emulator -avd test -no-skin -no-audio -no-window &
before_script:
  - pwd
  - ls -la
  - ls -la  android-sdk-linux
  - ls -la  android-sdk-linux/platform-tools
  - ls -laR android-sdk-linux/build-tools/
  #####
  # Just see if aapt can be run now it's been installed
  - chmod 777 ./buildstuff.sh
  - chmod +x wait_for_emulator
  - ./wait_for_emulator
  - adb install apks/android-server-2.32.0.apk
  - adb shell am start -a android.intent.action.MAIN -n org.openqa.selenium.android.app/.MainActivity -e debug true
  - adb forward tcp:8080 tcp:8080
  - wget --server-response http://localhost:8080/wd/hub
script: "./buildstuff.sh"
